[versions]
agp = "8.2.2"
androidx-activityCompose = "1.8.2"
coreSplashscreen = "1.0.1"
coroutines = "1.7.3"
compose-plugin = "1.6.0" # 1.6.0
datastorePreferences = "1.1.1"
kotlin = "1.9.21"# 1.9.21

junit = "4.13.2"
voyager = "1.0.0"
coil3-io = "3.0.0-alpha02"
ktor = "2.3.7"

realmVersion = "1.13.0"
windowSize="0.3.1"
navigationCompose = "2.7.7"
kotlinxCoroutinesSwing="1.8.0"
commonNavigationVer = "2.7.0-alpha07"
commonViewmodelVer="2.8.0"
## For room database
room = "2.7.0-alpha01"
ksp = "1.9.23-1.0.19"
sqlite = "2.5.0-SNAPSHOT"
roomCommonJvm = "2.7.0-alpha08"

## For server
logback = "1.2.11"
ktorServer = "2.0.0"

[libraries]
androidx-activity-compose= { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "coreSplashscreen" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
coil3 = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil3-io" }
coil3-network = { module = "io.coil-kt.coil3:coil-network", version.ref = "coil3-io" }
coil3-core = { module = "io.coil-kt.coil3:coil-core", version.ref = "coil3-io" }
windowSize = { module = "dev.chrisbanes.material3:material3-window-size-class-multiplatform",version.ref = "windowSize"}

kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinxCoroutinesSwing" }
#Test
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
#

##For convention plugin building needs them
android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
compose-gradlePlugin = { module = "org.jetbrains.compose:org.jetbrains.compose.gradle.plugin", version.ref = "compose-plugin" }
## Navigation for multiplatfrom
common-navigation={module="org.jetbrains.androidx.navigation:navigation-compose",version.ref="commonNavigationVer"}
##  Navigation for multiplatfrom
common-viewmodel={module="org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose",version.ref="commonViewmodelVer"}
##ROOM
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-runtime-android = { module = "androidx.room:room-runtime-android", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }
androidx-room-common-jvm = { group = "androidx.room", name = "room-common-jvm", version.ref = "roomCommonJvm" }


##
#----------------------------------------------------------------
#----------------------------------------------------------------
#For server

ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktorServer" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktorServer" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }



[bundles]
test = ["kotlin-test", "kotlin-test-junit"]
ktorClient=["ktor-client-core","ktor-client-okhttp","ktor-client-content-negotiation","ktor-serialization-kotlinx-json"]
coil=["coil3-core","coil3-network","coil3"]
#----------------------------------------------------------------
#----------------------------------------------------------------


ktor-server = [
    "ktor-server-core",
    "ktor-server-netty",
    "ktor-server-content-negotiation",
    "ktor-serialization-kotlinx-json"
]


[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinxSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
realm={id="io.realm.kotlin", version.ref = "realmVersion"}
##For Room
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
room = { id = "androidx.room", version.ref = "room" }

compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version .ref= "kotlin" }

#TODO:Convention plugin
convention-composeMultiplatfrom={id="convention.composeMultiplatform",version="unspecified"}
convention-kotlinMultiplatform={id="convention.kotlinMultiplatform",version="unspecified"}
convention-domainModulePlugin={id="convention.DomainModulePlugin",version="unspecified"}
convention-dataModulePlugin={id="convention.dataModulePlugin",version="unspecified"}

